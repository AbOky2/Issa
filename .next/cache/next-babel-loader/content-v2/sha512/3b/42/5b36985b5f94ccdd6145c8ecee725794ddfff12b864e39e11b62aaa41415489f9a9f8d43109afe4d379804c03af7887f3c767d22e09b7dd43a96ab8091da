{"ast":null,"code":"var _jsxFileName = \"/usr/src/kit-le-nid/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from 'next/app';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport { theme } from '../lib/theme';\nimport Notifier from '../components/Notifier';\nimport Header from '../components/Header';\nRouter.events.on('routeChangeStart', () => {\n  NProgress.start();\n});\nRouter.events.on('routeChangeComplete', url => {\n  if (window && process.env.GA_MEASUREMENT_ID) {\n    window.gtag('config', process.env.GA_MEASUREMENT_ID, {\n      page_path: url\n    });\n  }\n\n  NProgress.done();\n});\nRouter.events.on('routeChangeError', () => NProgress.done());\nconst propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired // eslint-disable-line\n\n};\n\nclass MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    var _pageProps$user;\n\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })), __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, !((_pageProps$user = pageProps.user) !== null && _pageProps$user !== void 0 && _pageProps$user.isAdmin) ? null : __jsx(Header, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 46\n      }\n    })), __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }))), __jsx(Notifier, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nMyApp.propTypes = propTypes;\nexport default MyApp;","map":{"version":3,"sources":["/usr/src/kit-le-nid/pages/_app.js"],"names":["CssBaseline","ThemeProvider","App","PropTypes","React","Head","Router","NProgress","theme","Notifier","Header","events","on","start","url","window","process","env","GA_MEASUREMENT_ID","gtag","page_path","done","propTypes","Component","elementType","isRequired","pageProps","object","MyApp","componentDidMount","jssStyles","document","querySelector","parentNode","removeChild","render","props","user","isAdmin"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,+BAAxB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEAJ,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAM;AACzCL,EAAAA,SAAS,CAACM,KAAV;AACD,CAFD;AAIAP,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAyCE,GAAD,IAAS;AAC/C,MAAIC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,EAA6C;AAC3CH,IAAAA,MAAM,CAACI,IAAP,CAAY,QAAZ,EAAsBH,OAAO,CAACC,GAAR,CAAYC,iBAAlC,EAAqD;AACnDE,MAAAA,SAAS,EAAEN;AADwC,KAArD;AAGD;;AAEDP,EAAAA,SAAS,CAACc,IAAV;AACD,CARD;AAUAf,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAML,SAAS,CAACc,IAAV,EAA3C;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEpB,SAAS,CAACqB,WAAV,CAAsBC,UADjB;AAEhBC,EAAAA,SAAS,EAAEvB,SAAS,CAACwB,MAAV,CAAiBF,UAFZ,CAEwB;;AAFxB,CAAlB;;AAKA,MAAMG,KAAN,SAAoB1B,GAApB,CAAwB;AACtB2B,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAS,IAAIA,SAAS,CAACG,UAA3B,EAAuC;AACrCH,MAAAA,SAAS,CAACG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAG;AAAA;;AACP,UAAM;AAAEZ,MAAAA,SAAF;AAAaG,MAAAA;AAAb,QAA2B,KAAKU,KAAtC;AAEA,WACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAE5B,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,uCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,EAME,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,qBAACkB,SAAS,CAACW,IAAX,4CAAC,gBAAgBC,OAAjB,IAA2B,IAA3B,GAAkC,MAAC,MAAD,eAAYZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADrC,EAEE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CAPF,EAWE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAeD;;AA3BqB;;AA8BxBE,KAAK,CAACN,SAAN,GAAkBA,SAAlB;AAEA,eAAeM,KAAf","sourcesContent":["import CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from 'next/app';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\n\nimport { theme } from '../lib/theme';\n\nimport Notifier from '../components/Notifier';\nimport Header from '../components/Header';\n\nRouter.events.on('routeChangeStart', () => {\n  NProgress.start();\n});\n\nRouter.events.on('routeChangeComplete', (url) => {\n  if (window && process.env.GA_MEASUREMENT_ID) {\n    window.gtag('config', process.env.GA_MEASUREMENT_ID, {\n      page_path: url,\n    });\n  }\n\n  NProgress.done();\n});\n\nRouter.events.on('routeChangeError', () => NProgress.done());\n\nconst propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired, // eslint-disable-line\n};\n\nclass MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <ThemeProvider theme={theme}>\n        {/* ThemeProvider makes the theme available down the React tree thanks to React context. */}\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <Head>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        </Head>\n        <CssBaseline />\n        <div className=\"main-container\">\n          {!pageProps.user?.isAdmin ? null : <Header {...pageProps} />}\n          <Component {...pageProps} />\n        </div>\n        <Notifier />\n      </ThemeProvider>\n    );\n  }\n}\n\nMyApp.propTypes = propTypes;\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}