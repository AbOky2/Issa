{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Link from 'next/link';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport notify from '../../lib/notify';\nimport withAuth from '../../lib/withAuth';\nimport { getUsersApiMethod } from '../../lib/api/admin';\nimport { AdminContentWrapper } from '../../components/wrapper';\nimport UserList from '../../components/admin/UserList';\nimport { Icon } from '../../components/form'; // import './index.css';\n\nconst Dashboard = () => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    users: []\n  });\n  const handleChange = useCallback((name, value) => setState(_objectSpread(_objectSpread({}, state), {}, {\n    [name]: value\n  })), [state, setState]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const {\n          list\n        } = await getUsersApiMethod();\n        handleChange('users', list);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, []);\n  const {\n    users\n  } = state;\n  const headerList = [{\n    name: 'Nom',\n    size: {\n      xs: 3\n    }\n  }, {\n    name: 'Mail',\n    size: {\n      xs: 3\n    }\n  }, {\n    name: 'Téléphone',\n    size: {\n      xs: 2\n    }\n  }, {\n    name: 'Origin',\n    size: {\n      xs: 2\n    }\n  }, {\n    name: 'Parrain',\n    size: {\n      xs: 2\n    }\n  }];\n  const {\n    length\n  } = users;\n  return __jsx(AdminContentWrapper, null, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    className: \"spacing header\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 6,\n    justify: \"flex-start\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\"\n  }, __jsx(Grid, null, __jsx(\"span\", {\n    className: \"header-icon\"\n  }, __jsx(Icon, {\n    type: \"house\"\n  }))), __jsx(Grid, null, __jsx(\"h1\", null, \"Utilisateurs\", `${length ? ` (${length})` : ''}`)))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 6,\n    justify: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    justify: \"flex-end\"\n  }))), __jsx(UserList, {\n    headerList: headerList,\n    contentList: users\n  }));\n};\n\nexport default withAuth(Dashboard, {\n  adminRequired: true\n});","map":null,"metadata":{},"sourceType":"module"}