{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport withAuth from '../../lib/withAuth';\nimport { getPropertiesApiMethod, addBookmarkApiMethod, getUserSearchApiMethod } from '../../lib/api/customer';\nimport { toggleArray } from '../../helpers/convertAndCheck';\nimport { typeOfProperties } from '../../helpers/property';\nimport { AdminContentWrapper } from '../../components/wrapper';\nimport Card from '../../components/card';\nimport { Icon, Input, Select } from '../../components/form';\nconst useStyles = makeStyles({\n  card: {\n    width: 'calc(100% - 14px)'\n  },\n  title: {\n    color: '#4F80FF'\n  },\n  subTitle: {\n    margin: '4px 0 22px',\n    color: 'rgba(26, 46, 108, 0.75)'\n  },\n  setpsContainer: {\n    marginBottom: '40px',\n    padding: '3.2rem',\n    borderRadius: '2.5rem',\n    color: 'white',\n    background: 'white',\n    boxShadow: '0px 4px 13px rgb(0 0 0 / 10%), inset 0px -3px 10px rgb(149 149 149 / 20%)',\n    '& li': {\n      marginBottom: 15\n    },\n    '& span': {\n      padding: '0 5px',\n      color: 'white',\n      marginRight: 10,\n      background: '#4F80FF',\n      borderRadius: '3px'\n    }\n  },\n  searchContainer: {\n    marginBottom: 22,\n    boxShadow: '0px 4.15441px 16.6176px rgb(0 0 0 / 10%)',\n    '& > div:last-of-type svg': {\n      position: 'absolute',\n      right: 0,\n      top: '50%',\n      width: 40,\n      height: 40,\n      transform: 'translateY(-50%)'\n    },\n    '& > div:nth-child(2) > div > div > div': {\n      backgroundColor: 'white',\n      borderRadius: 0\n    },\n    '& > div:first-of-type input': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      borderRight: 'none'\n    },\n    '& > div:last-of-type input': {\n      borderLeft: 'none',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    }\n  },\n  listContainer: {\n    width: 'calc(33% - 11px)',\n    marginBottom: '2rem',\n    '&:nth-child(3n+2)': {\n      margin: '0 2.1rem 2rem'\n    }\n  }\n});\n\nconst SearchPage = ({\n  user,\n  properties,\n  queryType\n}) => {\n  var _user$bookmarks;\n\n  const {\n    0: state,\n    1: setState\n  } = useState(properties);\n  const {\n    0: queryData,\n    1: setQueryData\n  } = useState({\n    location: '',\n    maxPrice: 0,\n    typeOfProperty: typeOfProperties[0]\n  });\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(user === null || user === void 0 ? void 0 : (_user$bookmarks = user.bookmarks) === null || _user$bookmarks === void 0 ? void 0 : _user$bookmarks.map(elem => elem._id));\n  const classes = useStyles();\n\n  const handleSearch = name => ({\n    target: {\n      value\n    }\n  }) => setQueryData(_objectSpread(_objectSpread({}, queryData), {}, {\n    [name]: value\n  }));\n\n  const handleBookmark = id => {\n    setLiked(toggleArray(liked, id));\n    addBookmarkApiMethod({\n      id\n    });\n  };\n\n  const handleSumit = async () => {\n    // const queryData = { maxPrice: '20000', typeOfProperty: 'Appartement' };\n    if (!queryData.maxPrice) queryData.maxPrice = 0;\n    const {\n      list\n    } = await getUserSearchApiMethod(queryData);\n    setState(list);\n  };\n\n  return __jsx(AdminContentWrapper, {\n    redirectDashboard: true\n  }, __jsx(\"div\", null, queryType !== 'location' && __jsx(\"div\", {\n    className: classes.setpsContainer\n  }, __jsx(Typography, {\n    variant: \"h2\",\n    className: classes.title\n  }, \"Mon premier achat en 5 \\xE9tapes !\"), __jsx(Typography, {\n    variant: \"body1\",\n    className: classes.subTitle\n  }, \"Comment \\xE7a marche?\"), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(Typography, {\n    variant: \"body1\"\n  }, __jsx(\"span\", null, \"1\"), \"Je s\\xE9lectionne l'appartement qui me convient avec l'aide d'un conseiller Kit Le Nid\")), __jsx(\"li\", null, __jsx(Typography, {\n    variant: \"body1\"\n  }, __jsx(\"span\", null, \"2\"), \"J'effectue la r\\xE9servation du bien, qui est bloqu\\xE9 pour moi\")), __jsx(\"li\", null, __jsx(Typography, {\n    variant: \"body1\"\n  }, __jsx(\"span\", null, \"3\"), \"J'effectue les d\\xE9marches de pr\\xEAt immobilier ou la confie \\xE0 Kit Le Nid\")), __jsx(\"li\", null, __jsx(Typography, {\n    variant: \"body1\"\n  }, __jsx(\"span\", null, \"4\"), \"Je signe chez le notaire et devient officiellement propri\\xE9taire\")), __jsx(\"li\", null, __jsx(Typography, {\n    variant: \"body1\"\n  }, __jsx(\"span\", null, \"5\"), \"J'attends la livraison du bien et emm\\xE9nage!\")))), __jsx(Grid, {\n    container: true,\n    className: classes.searchContainer\n  }, __jsx(Grid, {\n    item: true,\n    md: 4\n  }, __jsx(Input, {\n    name: \"location\",\n    onChange: handleSearch,\n    placeholder: \"Localisation\"\n  })), __jsx(Grid, {\n    item: true,\n    md: 4\n  }, __jsx(Select, {\n    name: \"typeOfProperty\",\n    list: typeOfProperties.map(name => ({\n      name,\n      value: name\n    })),\n    onChange: handleSearch\n  })), __jsx(Grid, {\n    item: true,\n    md: 4,\n    className: \"relative\"\n  }, __jsx(Input, {\n    name: \"maxPrice\",\n    onChange: handleSearch,\n    placeholder: \"Budget maximal\"\n  }), __jsx(\"div\", {\n    onClick: handleSumit,\n    className: \"pointer\"\n  }, __jsx(Icon, {\n    type: \"search\",\n    size: \"large\"\n  })))), __jsx(Grid, {\n    container: true\n  }, state === null || state === void 0 ? void 0 : state.map(({\n    _id,\n    title,\n    pictures,\n    address,\n    typeOfProperty,\n    dimensions,\n    price\n  }) => __jsx(Grid, {\n    item: true,\n    key: _id,\n    className: classes.listContainer\n  }, __jsx(Link, {\n    href: `/dashboard/property/${_id}`\n  }, __jsx(\"a\", null, __jsx(Card, {\n    _id: _id,\n    title: title,\n    src: pictures === null || pictures === void 0 ? void 0 : pictures[0],\n    address: address,\n    description: typeOfProperty,\n    dimensions: dimensions,\n    price: price,\n    liked: liked.includes(_id),\n    onClick: handleBookmark\n  }))))))));\n};\n\nSearchPage.getInitialProps = async ({\n  req,\n  query\n}) => {\n  const headers = {};\n\n  if (req && req.headers && req.headers.cookie) {\n    headers.cookie = req.headers.cookie;\n  }\n\n  const queryType = query.type;\n  const {\n    list\n  } = await getPropertiesApiMethod({\n    headers\n  });\n  return {\n    properties: list,\n    queryType\n  };\n};\n\nexport default withAuth(SearchPage);","map":null,"metadata":{},"sourceType":"module"}