{"ast":null,"code":"const {\n  format,\n  differenceInYears\n} = require('date-fns');\n\nconst isArray = arr => Array.isArray(arr);\n\nconst isObject = arg => (typeof arg === 'object' || typeof arg === 'function') && arg !== null;\n\nconst toDate = date => format(new Date(date), 'dd/MM/yyyy');\n\nconst isMajor = age => differenceInYears(new Date(age), new Date()) >= 18;\n\nconst ucfirst = name => name.charAt(0).toUpperCase() + name.slice(1);\n\nconst isValidateEmail = email => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nconst toFormData = (form = {}) => {\n  const formData = new FormData();\n  Object.keys(form).forEach(key => formData.append(key, form[key]));\n  return formData;\n};\n\nconst toggleArray = (array, name) => {\n  let found = false;\n  if (!isArray(array) || !name && name !== '0') return array;\n  const data = array.filter(elem => {\n    if (elem === name) found = true;\n    return elem !== name;\n  });\n  if (!found) data.push(name);\n  return data;\n};\n\nconst pick = (object, keys) => keys.reduce((obj, key) => {\n  if (object && Object.prototype.hasOwnProperty.call(object, key)) {\n    // eslint-disable-next-line no-param-reassign\n    obj[key] = object[key];\n  }\n\n  return obj;\n}, {});\n\nmodule.exports = {\n  toDate,\n  isMajor,\n  isArray,\n  isObject,\n  ucfirst,\n  toFormData,\n  isValidateEmail,\n  pick,\n  toggleArray\n};","map":{"version":3,"sources":["/usr/src/kit-le-nid/helpers/convertAndCheck.js"],"names":["format","differenceInYears","require","isArray","arr","Array","isObject","arg","toDate","date","Date","isMajor","age","ucfirst","name","charAt","toUpperCase","slice","isValidateEmail","email","re","test","String","toLowerCase","toFormData","form","formData","FormData","Object","keys","forEach","key","append","toggleArray","array","found","data","filter","elem","push","pick","object","reduce","obj","prototype","hasOwnProperty","call","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAgCC,OAAO,CAAC,UAAD,CAA7C;;AAEA,MAAMC,OAAO,GAAIC,GAAD,IAASC,KAAK,CAACF,OAAN,CAAcC,GAAd,CAAzB;;AACA,MAAME,QAAQ,GAAIC,GAAD,IAAS,CAAC,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA3C,KAA0DA,GAAG,KAAK,IAA5F;;AACA,MAAMC,MAAM,GAAIC,IAAD,IAAUT,MAAM,CAAC,IAAIU,IAAJ,CAASD,IAAT,CAAD,EAAiB,YAAjB,CAA/B;;AACA,MAAME,OAAO,GAAIC,GAAD,IAASX,iBAAiB,CAAC,IAAIS,IAAJ,CAASE,GAAT,CAAD,EAAgB,IAAIF,IAAJ,EAAhB,CAAjB,IAAgD,EAAzE;;AACA,MAAMG,OAAO,GAAIC,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BF,IAAI,CAACG,KAAL,CAAW,CAAX,CAAzD;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,EAAE,GAAG,uJAAX;AAEA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP;AACD,CAJD;;AAKA,MAAMC,UAAU,GAAG,CAACC,IAAI,GAAG,EAAR,KAAe;AAChC,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA2BC,GAAD,IAASL,QAAQ,CAACM,MAAT,CAAgBD,GAAhB,EAAqBN,IAAI,CAACM,GAAD,CAAzB,CAAnC;AAEA,SAAOL,QAAP;AACD,CAND;;AAOA,MAAMO,WAAW,GAAG,CAACC,KAAD,EAAQpB,IAAR,KAAiB;AACnC,MAAIqB,KAAK,GAAG,KAAZ;AAEA,MAAI,CAAChC,OAAO,CAAC+B,KAAD,CAAR,IAAoB,CAACpB,IAAD,IAASA,IAAI,KAAK,GAA1C,EAAgD,OAAOoB,KAAP;AAEhD,QAAME,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAcC,IAAD,IAAU;AAClC,QAAIA,IAAI,KAAKxB,IAAb,EAAmBqB,KAAK,GAAG,IAAR;AAEnB,WAAOG,IAAI,KAAKxB,IAAhB;AACD,GAJY,CAAb;AAMA,MAAI,CAACqB,KAAL,EAAYC,IAAI,CAACG,IAAL,CAAUzB,IAAV;AACZ,SAAOsB,IAAP;AACD,CAbD;;AAcA,MAAMI,IAAI,GAAG,CAACC,MAAD,EAASZ,IAAT,KACXA,IAAI,CAACa,MAAL,CAAY,CAACC,GAAD,EAAMZ,GAAN,KAAc;AACxB,MAAIU,MAAM,IAAIb,MAAM,CAACgB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,MAArC,EAA6CV,GAA7C,CAAd,EAAiE;AAC/D;AACAY,IAAAA,GAAG,CAACZ,GAAD,CAAH,GAAWU,MAAM,CAACV,GAAD,CAAjB;AACD;;AAED,SAAOY,GAAP;AACD,CAPD,EAOG,EAPH,CADF;;AAUAI,MAAM,CAACC,OAAP,GAAiB;AACfxC,EAAAA,MADe;AAEfG,EAAAA,OAFe;AAGfR,EAAAA,OAHe;AAIfG,EAAAA,QAJe;AAKfO,EAAAA,OALe;AAMfW,EAAAA,UANe;AAOfN,EAAAA,eAPe;AAQfsB,EAAAA,IARe;AASfP,EAAAA;AATe,CAAjB","sourcesContent":["const { format, differenceInYears } = require('date-fns');\n\nconst isArray = (arr) => Array.isArray(arr);\nconst isObject = (arg) => (typeof arg === 'object' || typeof arg === 'function') && arg !== null;\nconst toDate = (date) => format(new Date(date), 'dd/MM/yyyy');\nconst isMajor = (age) => differenceInYears(new Date(age), new Date()) >= 18;\nconst ucfirst = (name) => name.charAt(0).toUpperCase() + name.slice(1);\nconst isValidateEmail = (email) => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return re.test(String(email).toLowerCase());\n};\nconst toFormData = (form = {}) => {\n  const formData = new FormData();\n\n  Object.keys(form).forEach((key) => formData.append(key, form[key]));\n\n  return formData;\n};\nconst toggleArray = (array, name) => {\n  let found = false;\n\n  if (!isArray(array) || (!name && name !== '0')) return array;\n\n  const data = array.filter((elem) => {\n    if (elem === name) found = true;\n\n    return elem !== name;\n  });\n\n  if (!found) data.push(name);\n  return data;\n};\nconst pick = (object, keys) =>\n  keys.reduce((obj, key) => {\n    if (object && Object.prototype.hasOwnProperty.call(object, key)) {\n      // eslint-disable-next-line no-param-reassign\n      obj[key] = object[key];\n    }\n\n    return obj;\n  }, {});\n\nmodule.exports = {\n  toDate,\n  isMajor,\n  isArray,\n  isObject,\n  ucfirst,\n  toFormData,\n  isValidateEmail,\n  pick,\n  toggleArray,\n};\n"]},"metadata":{},"sourceType":"script"}