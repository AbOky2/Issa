{"ast":null,"code":"import _classCallCheck from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/usr/src/kit-le-nid/components/Notifier.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nvar openSnackbarFn;\n\nvar Notifier = /*#__PURE__*/function (_React$Component) {\n  _inherits(Notifier, _React$Component);\n\n  var _super = _createSuper(Notifier);\n\n  function Notifier(props) {\n    var _this;\n\n    _classCallCheck(this, Notifier);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSnackbarRequestClose\", function () {\n      _this.setState({\n        open: false,\n        message: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openSnackbar\", function (_ref) {\n      var message = _ref.message;\n\n      _this.setState({\n        open: true,\n        message: message\n      });\n    });\n\n    _this.state = {\n      open: false,\n      message: ''\n    };\n    return _this;\n  }\n\n  _createClass(Notifier, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      openSnackbarFn = this.openSnackbar;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          open = _this$state.open,\n          stateMessage = _this$state.message;\n\n      var message = __jsx(\"span\", {\n        id: \"snackbar-message-id\",\n        dangerouslySetInnerHTML: {\n          __html: stateMessage\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      });\n\n      return __jsx(Snackbar, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        open: open,\n        message: message,\n        autoHideDuration: 5000,\n        onClose: this.handleSnackbarRequestClose,\n        ContentProps: {\n          'aria-describedby': 'snackbar-message-id'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Notifier;\n}(React.Component);\n\nexport function openSnackbarExported(_ref2) {\n  var message = _ref2.message;\n  openSnackbarFn({\n    message: message\n  });\n}\nexport default Notifier;","map":{"version":3,"sources":["/usr/src/kit-le-nid/components/Notifier.js"],"names":["React","Snackbar","openSnackbarFn","Notifier","props","setState","open","message","state","openSnackbar","stateMessage","__html","vertical","horizontal","handleSnackbarRequestClose","Component","openSnackbarExported"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,IAAIC,cAAJ;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,iFAaU,YAAM;AACjC,YAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE,KADM;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAlBkB;;AAAA,mEAoBJ,gBAAiB;AAAA,UAAdA,OAAc,QAAdA,OAAc;;AAC9B,YAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,OAAO,EAAPA;AAAd,OAAd;AACD,KAtBkB;;AAGjB,UAAKC,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE,KADK;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAHiB;AAOlB;;;;wCAEmB;AAClBL,MAAAA,cAAc,GAAG,KAAKO,YAAtB;AACD;;;6BAaQ;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACCF,IADD,eACCA,IADD;AAAA,UACgBI,YADhB,eACOH,OADP;;AAEP,UAAMA,OAAO,GACX;AAAM,QAAA,EAAE,EAAC,qBAAT;AAA+B,QAAA,uBAAuB,EAAE;AAAEI,UAAAA,MAAM,EAAED;AAAV,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAIA,aACE,MAAC,QAAD;AACE,QAAA,YAAY,EAAE;AAAEE,UAAAA,QAAQ,EAAE,KAAZ;AAAmBC,UAAAA,UAAU,EAAE;AAA/B,SADhB;AAEE,QAAA,IAAI,EAAEP,IAFR;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,gBAAgB,EAAE,IAJpB;AAKE,QAAA,OAAO,EAAE,KAAKO,0BALhB;AAME,QAAA,YAAY,EAAE;AACZ,8BAAoB;AADR,SANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD;;;;EA3CoBd,KAAK,CAACe,S;;AA8C7B,OAAO,SAASC,oBAAT,QAA2C;AAAA,MAAXT,OAAW,SAAXA,OAAW;AAChDL,EAAAA,cAAc,CAAC;AAAEK,IAAAA,OAAO,EAAPA;AAAF,GAAD,CAAd;AACD;AAED,eAAeJ,QAAf","sourcesContent":["import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nlet openSnackbarFn;\n\nclass Notifier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      message: '',\n    };\n  }\n\n  componentDidMount() {\n    openSnackbarFn = this.openSnackbar;\n  }\n\n  handleSnackbarRequestClose = () => {\n    this.setState({\n      open: false,\n      message: '',\n    });\n  };\n\n  openSnackbar = ({ message }) => {\n    this.setState({ open: true, message });\n  };\n\n  render() {\n    const { open, message: stateMessage } = this.state;\n    const message = (\n      <span id=\"snackbar-message-id\" dangerouslySetInnerHTML={{ __html: stateMessage }} />\n    );\n\n    return (\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={open}\n        message={message}\n        autoHideDuration={5000}\n        onClose={this.handleSnackbarRequestClose}\n        ContentProps={{\n          'aria-describedby': 'snackbar-message-id',\n        }}\n      />\n    );\n  }\n}\n\nexport function openSnackbarExported({ message }) {\n  openSnackbarFn({ message });\n}\n\nexport default Notifier;\n"]},"metadata":{},"sourceType":"module"}