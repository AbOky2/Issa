{"ast":null,"code":"import _defineProperty from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport sendRequest from './sendRequest';\nvar BASE_PATH = '/api/v1/public';\nexport var signIn = function signIn(args) {\n  return sendRequest(\"/auth/signin\", {\n    body: JSON.stringify(args)\n  });\n};\nexport var signUp = function signUp(args) {\n  return sendRequest(\"/auth/signup\", {\n    body: JSON.stringify(args)\n  });\n};\nexport var logOut = function logOut() {\n  return sendRequest(\"/auth/logout\", {\n    method: 'GET'\n  });\n};\nexport var getBookDetailApiMethod = function getBookDetailApiMethod(_ref) {\n  var slug = _ref.slug;\n  return sendRequest(\"\".concat(BASE_PATH, \"/books/\").concat(slug), {\n    method: 'GET'\n  });\n};\nexport var getChapterDetailApiMethod = function getChapterDetailApiMethod(_ref2) {\n  var bookSlug = _ref2.bookSlug,\n      chapterSlug = _ref2.chapterSlug;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return sendRequest(\"\".concat(BASE_PATH, \"/get-chapter-detail?bookSlug=\").concat(bookSlug, \"&chapterSlug=\").concat(chapterSlug), _objectSpread({\n    method: 'GET'\n  }, options));\n};","map":{"version":3,"sources":["/usr/src/kit-le-nid/lib/api/public.js"],"names":["sendRequest","BASE_PATH","signIn","args","body","JSON","stringify","signUp","logOut","method","getBookDetailApiMethod","slug","getChapterDetailApiMethod","bookSlug","chapterSlug","options"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,IAAMC,SAAS,GAAG,gBAAlB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD;AAAA,SACpBH,WAAW,iBAAiB;AAC1BI,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AADoB,GAAjB,CADS;AAAA,CAAf;AAIP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACJ,IAAD;AAAA,SACpBH,WAAW,iBAAiB;AAC1BI,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AADoB,GAAjB,CADS;AAAA,CAAf;AAIP,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAS;AAAA,SACpBR,WAAW,iBAAiB;AAC1BS,IAAAA,MAAM,EAAE;AADkB,GAAjB,CADS;AAAA,CAAf;AAKP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SACpCX,WAAW,WAAIC,SAAJ,oBAAuBU,IAAvB,GAA+B;AACxCF,IAAAA,MAAM,EAAE;AADgC,GAA/B,CADyB;AAAA,CAA/B;AAKP,OAAO,IAAMG,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,MAAaC,WAAb,SAAaA,WAAb;AAAA,MAA4BC,OAA5B,uEAAsC,EAAtC;AAAA,SACvCf,WAAW,WAAIC,SAAJ,0CAA6CY,QAA7C,0BAAqEC,WAArE;AACTL,IAAAA,MAAM,EAAE;AADC,KAENM,OAFM,EAD4B;AAAA,CAAlC","sourcesContent":["import sendRequest from './sendRequest';\n\nconst BASE_PATH = '/api/v1/public';\n\nexport const signIn = (args) =>\n  sendRequest(`/auth/signin`, {\n    body: JSON.stringify(args),\n  });\nexport const signUp = (args) =>\n  sendRequest(`/auth/signup`, {\n    body: JSON.stringify(args),\n  });\nexport const logOut = () =>\n  sendRequest(`/auth/logout`, {\n    method: 'GET',\n  });\n\nexport const getBookDetailApiMethod = ({ slug }) =>\n  sendRequest(`${BASE_PATH}/books/${slug}`, {\n    method: 'GET',\n  });\n\nexport const getChapterDetailApiMethod = ({ bookSlug, chapterSlug }, options = {}) =>\n  sendRequest(`${BASE_PATH}/get-chapter-detail?bookSlug=${bookSlug}&chapterSlug=${chapterSlug}`, {\n    method: 'GET',\n    ...options,\n  });\n"]},"metadata":{},"sourceType":"module"}