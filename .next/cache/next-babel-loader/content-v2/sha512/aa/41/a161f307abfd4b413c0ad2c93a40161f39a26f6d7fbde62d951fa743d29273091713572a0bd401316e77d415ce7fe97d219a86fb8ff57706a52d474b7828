{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport sendRequest from './sendRequest';\nconst BASE_PATH = '/api/v1/public';\nexport const signIn = args => sendRequest(`/auth/signin`, {\n  body: JSON.stringify(args)\n});\nexport const signUp = args => sendRequest(`/auth/signup`, {\n  body: JSON.stringify(args)\n});\nexport const logOut = () => sendRequest(`/auth/logout`, {\n  method: 'GET'\n});\nexport const getBookDetailApiMethod = ({\n  slug\n}) => sendRequest(`${BASE_PATH}/books/${slug}`, {\n  method: 'GET'\n});\nexport const getChapterDetailApiMethod = ({\n  bookSlug,\n  chapterSlug\n}, options = {}) => sendRequest(`${BASE_PATH}/get-chapter-detail?bookSlug=${bookSlug}&chapterSlug=${chapterSlug}`, _objectSpread({\n  method: 'GET'\n}, options));","map":null,"metadata":{},"sourceType":"module"}