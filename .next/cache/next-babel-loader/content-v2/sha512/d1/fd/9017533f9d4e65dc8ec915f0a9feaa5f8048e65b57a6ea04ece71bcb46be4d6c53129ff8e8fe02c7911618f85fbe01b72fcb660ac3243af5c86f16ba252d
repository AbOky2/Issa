{"ast":null,"code":"const {\n  format,\n  differenceInYears\n} = require('date-fns');\n\nconst isArray = arr => Array.isArray(arr);\n\nconst isObject = arg => (typeof arg === 'object' || typeof arg === 'function') && arg !== null;\n\nconst toDate = date => format(new Date(date), 'dd/MM/yyyy');\n\nconst isMajor = age => differenceInYears(new Date(age), new Date()) >= 18;\n\nconst ucfirst = name => name.charAt(0).toUpperCase() + name.slice(1);\n\nconst isValidateEmail = email => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nconst toFormData = (form = {}) => {\n  const formData = new FormData();\n  Object.keys(form).forEach(key => formData.append(key, form[key]));\n  return formData;\n};\n\nconst toggleArray = (array, name) => {\n  let found = false;\n  if (!isArray(array) || !name && name !== '0') return array;\n  const data = array.filter(elem => {\n    if (elem === name) found = true;\n    return elem !== name;\n  });\n  if (!found) data.push(name);\n  return data;\n};\n\nconst pick = (object, keys) => keys.reduce((obj, key) => {\n  if (object && Object.prototype.hasOwnProperty.call(object, key)) {\n    // eslint-disable-next-line no-param-reassign\n    obj[key] = object[key];\n  }\n\n  return obj;\n}, {});\n\nmodule.exports = {\n  toDate,\n  isMajor,\n  isArray,\n  isObject,\n  ucfirst,\n  toFormData,\n  isValidateEmail,\n  pick,\n  toggleArray\n};","map":null,"metadata":{},"sourceType":"script"}