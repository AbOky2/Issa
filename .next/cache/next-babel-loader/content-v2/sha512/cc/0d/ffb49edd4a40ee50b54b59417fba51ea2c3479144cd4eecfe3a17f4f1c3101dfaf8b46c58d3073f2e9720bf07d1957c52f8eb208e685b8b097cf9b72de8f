{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nlet openSnackbarFn;\n\nclass Notifier extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSnackbarRequestClose\", () => {\n      this.setState({\n        open: false,\n        message: ''\n      });\n    });\n\n    _defineProperty(this, \"openSnackbar\", ({\n      message\n    }) => {\n      this.setState({\n        open: true,\n        message\n      });\n    });\n\n    this.state = {\n      open: false,\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    openSnackbarFn = this.openSnackbar;\n  }\n\n  render() {\n    const {\n      open,\n      message: stateMessage\n    } = this.state;\n\n    const message = __jsx(\"span\", {\n      id: \"snackbar-message-id\",\n      dangerouslySetInnerHTML: {\n        __html: stateMessage\n      }\n    });\n\n    return __jsx(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      open: open,\n      message: message,\n      autoHideDuration: 5000,\n      onClose: this.handleSnackbarRequestClose,\n      ContentProps: {\n        'aria-describedby': 'snackbar-message-id'\n      }\n    });\n  }\n\n}\n\nexport function openSnackbarExported({\n  message\n}) {\n  openSnackbarFn({\n    message\n  });\n}\nexport default Notifier;","map":null,"metadata":{},"sourceType":"module"}