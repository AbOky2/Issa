{"ast":null,"code":"var _jsxFileName = \"/usr/src/kit-le-nid/components/form/Wysiwyg.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport ReactMde from 'react-mde';\nimport PropTypes from 'prop-types';\nimport * as Showdown from 'showdown';\nimport { FormElementWrapper } from './formElement';\nimport 'react-mde/lib/styles/css/react-mde-all.css';\n\nvar WysiwygComp = function WysiwygComp(_ref) {\n  _s();\n\n  var value = _ref.value,\n      _onChange = _ref.onChange,\n      label = _ref.label,\n      showLabel = _ref.showLabel;\n\n  var _useState = useState('write'),\n      tab = _useState[0],\n      setTab = _useState[1];\n\n  var converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n  return __jsx(FormElementWrapper, {\n    label: label,\n    showLabel: showLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(ReactMde, {\n    onChange: function onChange(value) {\n      return _onChange(value);\n    },\n    onTabChange: setTab,\n    value: value,\n    generateMarkdownPreview: function generateMarkdownPreview(markdown) {\n      return Promise.resolve(converter.makeHtml(markdown));\n    },\n    selectedTab: tab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(WysiwygComp, \"zcBC44PNShwO/cKbyU2noDQeCyI=\");\n\n_c = WysiwygComp;\nWysiwygComp.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  showLabel: PropTypes.bool,\n  label: PropTypes.string\n};\nexport default WysiwygComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"WysiwygComp\");","map":{"version":3,"sources":["/usr/src/kit-le-nid/components/form/Wysiwyg.js"],"names":["React","useState","ReactMde","PropTypes","Showdown","FormElementWrapper","WysiwygComp","value","onChange","label","showLabel","tab","setTab","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","markdown","Promise","resolve","makeHtml","propTypes","string","isRequired","func","bool"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,OAAO,4CAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA2C;AAAA;;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,SAAiC,QAAjCA,QAAiC;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACvCT,QAAQ,CAAC,OAAD,CAD+B;AAAA,MACtDU,GADsD;AAAA,MACjDC,MADiD;;AAG7D,MAAMC,SAAS,GAAG,IAAIT,QAAQ,CAACU,SAAb,CAAuB;AACvCC,IAAAA,MAAM,EAAE,IAD+B;AAEvCC,IAAAA,kBAAkB,EAAE,IAFmB;AAGvCC,IAAAA,aAAa,EAAE,IAHwB;AAIvCC,IAAAA,SAAS,EAAE;AAJ4B,GAAvB,CAAlB;AAOA,SACE,MAAC,kBAAD;AAAoB,IAAA,KAAK,EAAET,KAA3B;AAAkC,IAAA,SAAS,EAAEC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,QAAQ,EAAE,kBAACH,KAAD;AAAA,aAAWC,SAAQ,CAACD,KAAD,CAAnB;AAAA,KADZ;AAEE,IAAA,WAAW,EAAEK,MAFf;AAGE,IAAA,KAAK,EAAEL,KAHT;AAIE,IAAA,uBAAuB,EAAE,iCAACY,QAAD;AAAA,aAAcC,OAAO,CAACC,OAAR,CAAgBR,SAAS,CAACS,QAAV,CAAmBH,QAAnB,CAAhB,CAAd;AAAA,KAJ3B;AAKE,IAAA,WAAW,EAAER,GALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAaD,CAvBD;;GAAML,W;;KAAAA,W;AAyBNA,WAAW,CAACiB,SAAZ,GAAwB;AACtBhB,EAAAA,KAAK,EAAEJ,SAAS,CAACqB,MAAV,CAAiBC,UADF;AAEtBjB,EAAAA,QAAQ,EAAEL,SAAS,CAACuB,IAAV,CAAeD,UAFH;AAGtBf,EAAAA,SAAS,EAAEP,SAAS,CAACwB,IAHC;AAItBlB,EAAAA,KAAK,EAAEN,SAAS,CAACqB;AAJK,CAAxB;AAMA,eAAelB,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactMde from 'react-mde';\nimport PropTypes from 'prop-types';\nimport * as Showdown from 'showdown';\nimport { FormElementWrapper } from './formElement';\nimport 'react-mde/lib/styles/css/react-mde-all.css';\n\nconst WysiwygComp = ({ value, onChange, label, showLabel }) => {\n  const [tab, setTab] = useState('write');\n\n  const converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true,\n  });\n\n  return (\n    <FormElementWrapper label={label} showLabel={showLabel}>\n      <span className=\"container\">\n        <ReactMde\n          onChange={(value) => onChange(value)}\n          onTabChange={setTab}\n          value={value}\n          generateMarkdownPreview={(markdown) => Promise.resolve(converter.makeHtml(markdown))}\n          selectedTab={tab}\n        />\n      </span>\n    </FormElementWrapper>\n  );\n};\n\nWysiwygComp.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  showLabel: PropTypes.bool,\n  label: PropTypes.string,\n};\nexport default WysiwygComp;\n"]},"metadata":{},"sourceType":"module"}