{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Grid, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AdminContentWrapper } from '../../components/wrapper';\nimport { Modal, Icon } from '../../components/form'; // import { ReactComponent as LotsIcon } from 'assets/img/svg/partners.svg';\n// import { ReactComponent as AddIcon } from 'assets/img/svg/add.svg';\n\nimport { getPartnersApiMethod, deletePartnerApiMethod } from '../../lib/api/admin';\nimport withAuth from '../../lib/withAuth';\nimport { partnerTypeListKeys, partnerTypes } from '../../helpers/partner';\nimport PartnerModal from '../../components/admin/partnerModal';\nconst useStyles = makeStyles(theme => ({\n  media: {\n    height: 140\n  },\n  closeModal: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    cursor: 'pointer',\n    padding: 10,\n    zIndex: 10,\n    '&:hover': {\n      backgroundColor: '#bbd0ff',\n      color: 'white'\n    }\n  }\n}));\n\nfunction ListCard({\n  data\n}) {\n  const classes = useStyles();\n  return __jsx(Card, {\n    className: classes.root\n  }, __jsx(CardActionArea, null, __jsx(CardMedia, {\n    className: classes.media,\n    image: data === null || data === void 0 ? void 0 : data.picture,\n    title: \"Contemplative Reptile\"\n  }), __jsx(CardContent, null, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\"\n  }, data.name), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\"\n  }, data.description))), __jsx(CardActions, null, __jsx(\"div\", {\n    className: \"auto\"\n  }, partnerTypes[data.type])));\n}\n\nconst defaultAddNew = {\n  _id: null,\n  picture: null,\n  name: 'aaaa-',\n  description: 'bbbb',\n  link: 'cccc',\n  position: 5\n};\n\nconst Header = ({\n  onClick\n}) => __jsx(Grid, {\n  container: true,\n  justify: \"space-between\",\n  alignItems: \"center\"\n}, __jsx(Grid, {\n  item: true\n}, __jsx(Grid, null, __jsx(\"span\", {\n  className: \"header-icon\"\n}, __jsx(Icon, {\n  type: \"sponsorship\",\n  size: \"small\"\n})), __jsx(\"h1\", null, \"Offres partenaires\"))), __jsx(Grid, {\n  item: true\n}, __jsx(Grid, {\n  onClick: onClick,\n  className: \"submit pointer partner-add\"\n}, __jsx(\"span\", {\n  className: \"header-icon\"\n}, __jsx(Icon, {\n  type: \"plus\",\n  size: \"small\"\n})), __jsx(\"p\", null, \"Ajouter\"))));\n\nconst noFilter = null;\n\nconst PartnersDashboard = () => {\n  const {\n    0: filter,\n    1: setFilter\n  } = useState(noFilter);\n  const {\n    0: partners,\n    1: setPartners\n  } = useState([]);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    openModal: false,\n    editElement: {}\n  });\n  const handleChange = useCallback((name, value) => setState(_objectSpread(_objectSpread({}, state), {}, {\n    [name]: value\n  })), [state, setState]);\n\n  const toggleState = name => handleChange(name, !state[name]);\n\n  const resetState = useCallback(() => setState(_objectSpread(_objectSpread(_objectSpread({}, state), {}, {\n    openModal: false,\n    filter: noFilter\n  }, defaultAddNew), {}, {\n    editElement: {}\n  })), [state, setState]);\n\n  const handleClose = () => resetState();\n\n  const handleActiveFilter = useCallback(name => setFilter(name), [setFilter]);\n\n  const onClick = () => toggleState('openModal');\n\n  const reloadPartners = useCallback(async () => {\n    const {\n      list\n    } = await getPartnersApiMethod();\n    setPartners(list);\n    resetState();\n  }, [resetState, setPartners]);\n\n  const handleEditSelect = id => {\n    setState({\n      openModal: true,\n      editElement: partners.find(e => e._id === id)\n    });\n  };\n\n  const handleDelete = async id => {\n    await deletePartnerApiMethod(id);\n    reloadPartners();\n  };\n\n  useEffect(() => {\n    reloadPartners();\n  }, []);\n  const filteredList = filter ? partners.filter(elem => elem.type === filter) : partners;\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(AdminContentWrapper, null, __jsx(Modal, {\n    openModal: state.openModal,\n    onClose: handleClose,\n    onClick: onClick,\n    showActions: false\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"flex-start\"\n  }, __jsx(PartnerModal, {\n    current: state.editElement,\n    handleSubmit: reloadPartners,\n    handleClose: handleClose\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    className: \"spacing header\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    justify: \"flex-start\"\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\"\n  }, __jsx(Header, {\n    onClick: onClick\n  })))), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"center\"\n  }, __jsx(\"div\", {\n    onClick: () => handleActiveFilter(noFilter),\n    className: \"partner-filter\"\n  }, \"Tout\"), partnerTypeListKeys.map(elem => // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n  __jsx(\"div\", {\n    key: elem,\n    onClick: () => handleActiveFilter(elem),\n    className: `partner-filter ${elem === filter ? 'active' : ''}`\n  }, partnerTypes[elem]))), __jsx(Grid, {\n    container: true,\n    className: \"partner-card-list-container\",\n    justify: \"space-arround\"\n  }, filteredList.map(elem => __jsx(Grid, {\n    item: true,\n    key: elem._id,\n    alignItems: \"center\",\n    md: 4,\n    onClick: () => handleEditSelect(elem._id),\n    className: \"partner-card-list relative\"\n  }, __jsx(\"span\", {\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      handleDelete(elem._id);\n    },\n    className: classes.closeModal\n  }, \"x\"), __jsx(ListCard, {\n    data: elem\n  })))))));\n};\n\nexport default withAuth(PartnersDashboard, {\n  adminRequired: true\n});","map":null,"metadata":{},"sourceType":"module"}