{"ast":null,"code":"var __jsx = React.createElement;\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from 'next/app';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport { theme } from '../lib/theme';\nimport Notifier from '../components/Notifier';\nimport Header from '../components/Header';\nRouter.events.on('routeChangeStart', () => {\n  NProgress.start();\n});\nRouter.events.on('routeChangeComplete', url => {\n  if (window && process.env.GA_MEASUREMENT_ID) {\n    window.gtag('config', process.env.GA_MEASUREMENT_ID, {\n      page_path: url\n    });\n  }\n\n  NProgress.done();\n});\nRouter.events.on('routeChangeError', () => NProgress.done());\nconst propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired // eslint-disable-line\n\n};\n\nclass MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    var _pageProps$user;\n\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ThemeProvider, {\n      theme: theme\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1.0\"\n    })), __jsx(CssBaseline, null), __jsx(\"div\", {\n      className: \"main-container\"\n    }, !((_pageProps$user = pageProps.user) !== null && _pageProps$user !== void 0 && _pageProps$user.isAdmin) ? null : __jsx(Header, pageProps), __jsx(Component, pageProps)), __jsx(Notifier, null));\n  }\n\n}\n\nMyApp.propTypes = propTypes;\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}