{"ast":null,"code":"import sendRequest from './sendRequest';\nimport { toFormData } from '../../helpers/convertAndCheck';\nconst BASE_PATH = '/api/v1/admin';\nexport const getUsersApiMethod = () => sendRequest(`${BASE_PATH}/users`, {\n  method: 'GET'\n});\nexport const getBookListApiMethod = () => sendRequest(`${BASE_PATH}/books`, {\n  method: 'GET'\n});\nexport const getPartnersApiMethod = () => sendRequest(`${BASE_PATH}/partners`, {\n  method: 'GET'\n});\nexport const deletePartnerApiMethod = id => sendRequest(`${BASE_PATH}/partner/${id}`, {\n  method: 'DELETE'\n});\nexport const addPartnerApiMethod = args => sendRequest(`${BASE_PATH}/partner`, {\n  body: toFormData(args)\n}, true);\nexport const updatePartnerApiMethod = (id, args) => sendRequest(`${BASE_PATH}/partner/${id}`, {\n  method: 'PUT',\n  body: toFormData(args)\n}, true);\nexport const addBookApiMethod = ({\n  name,\n  price,\n  githubRepo\n}) => sendRequest(`${BASE_PATH}/books/add`, {\n  body: JSON.stringify({\n    name,\n    price,\n    githubRepo\n  })\n});\nexport const editBookApiMethod = ({\n  id,\n  name,\n  price,\n  githubRepo\n}) => sendRequest(`${BASE_PATH}/books/edit`, {\n  body: JSON.stringify({\n    id,\n    name,\n    price,\n    githubRepo\n  })\n});\nexport const getBookDetailApiMethod = ({\n  slug\n}) => sendRequest(`${BASE_PATH}/books/detail/${slug}`, {\n  method: 'GET'\n}); // github methods\n\nexport const getGithubReposApiMethod = () => sendRequest(`${BASE_PATH}/github/repos`, {\n  method: 'GET'\n});\nexport const syncBookContentApiMethod = ({\n  bookId\n}) => sendRequest(`${BASE_PATH}/books/sync-content`, {\n  body: JSON.stringify({\n    bookId\n  })\n});","map":{"version":3,"sources":["/usr/src/kit-le-nid/lib/api/admin.js"],"names":["sendRequest","toFormData","BASE_PATH","getUsersApiMethod","method","getBookListApiMethod","getPartnersApiMethod","deletePartnerApiMethod","id","addPartnerApiMethod","args","body","updatePartnerApiMethod","addBookApiMethod","name","price","githubRepo","JSON","stringify","editBookApiMethod","getBookDetailApiMethod","slug","getGithubReposApiMethod","syncBookContentApiMethod","bookId"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AAEA,MAAMC,SAAS,GAAG,eAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAC/BH,WAAW,CAAE,GAAEE,SAAU,QAAd,EAAuB;AAChCE,EAAAA,MAAM,EAAE;AADwB,CAAvB,CADN;AAIP,OAAO,MAAMC,oBAAoB,GAAG,MAClCL,WAAW,CAAE,GAAEE,SAAU,QAAd,EAAuB;AAChCE,EAAAA,MAAM,EAAE;AADwB,CAAvB,CADN;AAIP,OAAO,MAAME,oBAAoB,GAAG,MAClCN,WAAW,CAAE,GAAEE,SAAU,WAAd,EAA0B;AACnCE,EAAAA,MAAM,EAAE;AAD2B,CAA1B,CADN;AAIP,OAAO,MAAMG,sBAAsB,GAAIC,EAAD,IACpCR,WAAW,CAAE,GAAEE,SAAU,YAAWM,EAAG,EAA5B,EAA+B;AACxCJ,EAAAA,MAAM,EAAE;AADgC,CAA/B,CADN;AAIP,OAAO,MAAMK,mBAAmB,GAAIC,IAAD,IACjCV,WAAW,CACR,GAAEE,SAAU,UADJ,EAET;AACES,EAAAA,IAAI,EAAEV,UAAU,CAACS,IAAD;AADlB,CAFS,EAKT,IALS,CADN;AAQP,OAAO,MAAME,sBAAsB,GAAG,CAACJ,EAAD,EAAKE,IAAL,KACpCV,WAAW,CACR,GAAEE,SAAU,YAAWM,EAAG,EADlB,EAET;AACEJ,EAAAA,MAAM,EAAE,KADV;AAEEO,EAAAA,IAAI,EAAEV,UAAU,CAACS,IAAD;AAFlB,CAFS,EAMT,IANS,CADN;AAUP,OAAO,MAAMG,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAC9BhB,WAAW,CAAE,GAAEE,SAAU,YAAd,EAA2B;AACpCS,EAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAe;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf;AAD8B,CAA3B,CADN;AAKP,OAAO,MAAMG,iBAAiB,GAAG,CAAC;AAAEX,EAAAA,EAAF;AAAMM,EAAAA,IAAN;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAC/BhB,WAAW,CAAE,GAAEE,SAAU,aAAd,EAA4B;AACrCS,EAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAe;AACnBV,IAAAA,EADmB;AAEnBM,IAAAA,IAFmB;AAGnBC,IAAAA,KAHmB;AAInBC,IAAAA;AAJmB,GAAf;AAD+B,CAA5B,CADN;AAUP,OAAO,MAAMI,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACpCrB,WAAW,CAAE,GAAEE,SAAU,iBAAgBmB,IAAK,EAAnC,EAAsC;AAC/CjB,EAAAA,MAAM,EAAE;AADuC,CAAtC,CADN,C,CAKP;;AAEA,OAAO,MAAMkB,uBAAuB,GAAG,MACrCtB,WAAW,CAAE,GAAEE,SAAU,eAAd,EAA8B;AACvCE,EAAAA,MAAM,EAAE;AAD+B,CAA9B,CADN;AAKP,OAAO,MAAMmB,wBAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACtCxB,WAAW,CAAE,GAAEE,SAAU,qBAAd,EAAoC;AAC7CS,EAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAe;AAAEM,IAAAA;AAAF,GAAf;AADuC,CAApC,CADN","sourcesContent":["import sendRequest from './sendRequest';\nimport { toFormData } from '../../helpers/convertAndCheck';\n\nconst BASE_PATH = '/api/v1/admin';\n\nexport const getUsersApiMethod = () =>\n  sendRequest(`${BASE_PATH}/users`, {\n    method: 'GET',\n  });\nexport const getBookListApiMethod = () =>\n  sendRequest(`${BASE_PATH}/books`, {\n    method: 'GET',\n  });\nexport const getPartnersApiMethod = () =>\n  sendRequest(`${BASE_PATH}/partners`, {\n    method: 'GET',\n  });\nexport const deletePartnerApiMethod = (id) =>\n  sendRequest(`${BASE_PATH}/partner/${id}`, {\n    method: 'DELETE',\n  });\nexport const addPartnerApiMethod = (args) =>\n  sendRequest(\n    `${BASE_PATH}/partner`,\n    {\n      body: toFormData(args),\n    },\n    true,\n  );\nexport const updatePartnerApiMethod = (id, args) =>\n  sendRequest(\n    `${BASE_PATH}/partner/${id}`,\n    {\n      method: 'PUT',\n      body: toFormData(args),\n    },\n    true,\n  );\n\nexport const addBookApiMethod = ({ name, price, githubRepo }) =>\n  sendRequest(`${BASE_PATH}/books/add`, {\n    body: JSON.stringify({ name, price, githubRepo }),\n  });\n\nexport const editBookApiMethod = ({ id, name, price, githubRepo }) =>\n  sendRequest(`${BASE_PATH}/books/edit`, {\n    body: JSON.stringify({\n      id,\n      name,\n      price,\n      githubRepo,\n    }),\n  });\n\nexport const getBookDetailApiMethod = ({ slug }) =>\n  sendRequest(`${BASE_PATH}/books/detail/${slug}`, {\n    method: 'GET',\n  });\n\n// github methods\n\nexport const getGithubReposApiMethod = () =>\n  sendRequest(`${BASE_PATH}/github/repos`, {\n    method: 'GET',\n  });\n\nexport const syncBookContentApiMethod = ({ bookId }) =>\n  sendRequest(`${BASE_PATH}/books/sync-content`, {\n    body: JSON.stringify({ bookId }),\n  });\n"]},"metadata":{},"sourceType":"module"}