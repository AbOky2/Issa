{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport defaultUserImage from '../../static/img/upload-image.png';\nimport { FormElementWrapper } from './formElement';\n\nvar UploadImageComp = function UploadImageComp(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      label = _ref.label,\n      showLabel = _ref.showLabel,\n      props = _ref.props;\n\n  var _useState = useState({\n    imageUpdated: false,\n    imagePreviewUrl: value || defaultUserImage\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var handlePreview = function handlePreview(file, cb) {\n    var reader = new FileReader();\n    if (!file) return;\n\n    reader.onloadend = function () {\n      if (cb) cb(reader.result);\n    };\n\n    if (file) reader.readAsDataURL(file);\n  };\n\n  var handleImageChange = function handleImageChange(e) {\n    e.preventDefault();\n    var file = e.target.files[0];\n    handlePreview(file, function (base66) {\n      setState({\n        imagePreviewUrl: base66,\n        imageUpdated: true\n      });\n      onChange && onChange(file);\n    });\n  };\n\n  var imagePreviewUrl = state.imagePreviewUrl,\n      imageUpdated = state.imageUpdated;\n  if (value && imageUpdated && typeof value === 'string') imagePreviewUrl = value;\n  return __jsx(FormElementWrapper, {\n    label: label,\n    showLabel: showLabel\n  }, __jsx(\"div\", props, __jsx(\"div\", {\n    className: \"upload inline-block relative\"\n  }, __jsx(\"img\", {\n    src: imagePreviewUrl,\n    className: \"upload-src\",\n    alt: \"...\"\n  }), __jsx(\"input\", {\n    type: \"file\",\n    name: name,\n    onChange: function onChange(e) {\n      return handleImageChange(e);\n    }\n  })), !showLabel && __jsx(\"h6\", {\n    className: \"inline-block\"\n  }, label)));\n};\n\nexport default UploadImageComp;","map":null,"metadata":{},"sourceType":"module"}