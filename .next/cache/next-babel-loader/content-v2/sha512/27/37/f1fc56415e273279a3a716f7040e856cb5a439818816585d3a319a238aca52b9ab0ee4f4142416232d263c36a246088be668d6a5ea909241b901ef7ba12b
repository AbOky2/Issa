{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Upload from '../../form/Upload';\nimport { partnerTypes, partnerTypeListKeys } from '../../../helpers/partner';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    // margin: theme.spacing(1),\n    width: '100%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(4)\n  }\n}));\n\nconst Second = ({\n  onChange,\n  values = {}\n}) => {\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(\"span\", {\n    className: \"custom-upload-conatainer\"\n  }, \"Logo\"), __jsx(Upload, {\n    name: \"picture\",\n    value: values === null || values === void 0 ? void 0 : values.picture,\n    onChange: onChange('picture')\n  })), __jsx(\"div\", null, __jsx(\"span\", null, \"Url\"), __jsx(TextField, {\n    name: \"link\",\n    margin: \"none\",\n    value: values === null || values === void 0 ? void 0 : values.link,\n    onChange: e => onChange('link')(e.target.value),\n    required: true,\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true\n    }\n  })), __jsx(\"div\", {\n    className: classes.divider\n  }, __jsx(\"div\", {\n    className: classes.formControl\n  }, __jsx(\"span\", null, \"Type\"), __jsx(Select, {\n    fullWidth: true,\n    value: values.type // onChange={onChange}\n    ,\n    onChange: e => onChange('type')(e.target.value),\n    inputProps: {\n      name: 'type',\n      id: 'type-native-simple'\n    }\n  }, __jsx(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\"\n  }), partnerTypeListKeys.map(elem => __jsx(\"option\", {\n    key: elem,\n    value: elem\n  }, partnerTypes[elem]))))));\n};\n\nexport default Second;","map":null,"metadata":{},"sourceType":"module"}