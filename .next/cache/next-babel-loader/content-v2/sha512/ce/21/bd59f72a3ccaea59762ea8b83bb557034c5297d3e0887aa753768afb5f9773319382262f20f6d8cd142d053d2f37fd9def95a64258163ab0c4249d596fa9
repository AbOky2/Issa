{"ast":null,"code":"import _extends from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { Grid, Typography } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Icon } from '.';\nimport Btn from './Btn';\nvar useStyles = makeStyles({\n  container: {\n    padding: '4rem 10rem'\n  },\n  close: {\n    position: 'absolute',\n    top: 35,\n    right: 35,\n    cursor: 'pointer'\n  },\n  contentContainer: {\n    display: 'inline-block',\n    width: '100%',\n    margin: '0 auto 1rem',\n    padding: '4rem 0 5rem',\n    borderBottom: '1px solid #C1CDE7'\n  },\n  btnContainer: {\n    marginTop: 30,\n    '& > div:first-of-type': {\n      paddingRight: 11,\n      '& div': {\n        marginLeft: 'auto'\n      }\n    },\n    '& > div:last-of-type': {\n      paddingLeft: 11\n    }\n  }\n});\n\nvar Modal = function Modal(_ref) {\n  var children = _ref.children,\n      openModal = _ref.openModal,\n      onClose = _ref.onClose,\n      title = _ref.title,\n      _ref$showActions = _ref.showActions,\n      showActions = _ref$showActions === void 0 ? true : _ref$showActions,\n      onClick = _ref.onClick,\n      _ref$confirmText = _ref.confirmText,\n      confirmText = _ref$confirmText === void 0 ? 'Confirmer' : _ref$confirmText,\n      props = _objectWithoutProperties(_ref, [\"children\", \"openModal\", \"onClose\", \"title\", \"showActions\", \"onClick\", \"confirmText\"]);\n\n  var theme = useTheme();\n  var fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  var classes = useStyles();\n  return __jsx(Dialog, _extends({\n    fullScreen: fullScreen,\n    open: openModal,\n    onClose: onClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    disableBackdropClick: true,\n    fullWidth: true,\n    overlaystyle: {\n      background: \"linear-gradient(109.69deg, rgba(204, 149, 223, 0.3) 6.69%,\\n          rgba(79, 128, 255, 0.3) 63.14%)\"\n    },\n    maxWidth: \"lg\"\n  }, props), __jsx(\"div\", {\n    className: classes.close,\n    onClick: onClose\n  }, __jsx(Icon, {\n    type: \"close\"\n  })), __jsx(\"div\", {\n    className: classes.container\n  }, title ? __jsx(Typography, {\n    variant: \"h2\",\n    className: \"text-center\"\n  }, title) : '', __jsx(\"div\", {\n    className: classes.contentContainer\n  }, children), showActions && __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.btnContainer\n  }, __jsx(Grid, {\n    item: true,\n    md: 6\n  }, __jsx(Btn, {\n    text: \"Annuler\",\n    whiteColor: true,\n    onClick: onClose\n  })), __jsx(Grid, {\n    item: true,\n    md: 6\n  }, __jsx(Btn, {\n    text: confirmText,\n    onClick: onClick\n  })))));\n};\n\nModal.defaultProps = {\n  title: '',\n  openModal: false,\n  showActions: true,\n  confirmText: 'Confirmer'\n};\nexport default Modal;","map":null,"metadata":{},"sourceType":"module"}