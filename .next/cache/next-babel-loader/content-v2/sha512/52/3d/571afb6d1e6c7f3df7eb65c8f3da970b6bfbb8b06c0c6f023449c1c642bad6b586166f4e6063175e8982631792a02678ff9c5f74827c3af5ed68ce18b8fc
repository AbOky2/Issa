{"ast":null,"code":"var _jsxFileName = \"/usr/src/kit-le-nid/components/MenuWithAvatar.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport Menu from '@material-ui/core/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nconst propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(String).isRequired\n};\n\nclass MenuWithAvatar extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"handleClick\", event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        anchorEl: null\n      });\n    });\n\n    this.state = {\n      anchorEl: undefined\n    };\n  }\n\n  render() {\n    const {\n      options,\n      src,\n      alt\n    } = this.props;\n    const {\n      anchorEl\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, __jsx(Avatar, {\n      \"aria-controls\": anchorEl ? 'simple-menu' : null,\n      \"aria-haspopup\": \"true\",\n      onClick: this.handleClick,\n      onKeyPress: this.handleClick,\n      src: src,\n      alt: alt,\n      style: {\n        margin: '0px 20px 0px auto',\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), __jsx(Menu, {\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: this.handleClose,\n      keepMounted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), options.map(option => __jsx(\"div\", {\n      id: \"wrappingLink\",\n      key: option.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: option.href,\n      as: option.as || option.href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      style: {\n        padding: '0px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, option.text)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nMenuWithAvatar.propTypes = propTypes;\nexport default MenuWithAvatar;","map":{"version":3,"sources":["/usr/src/kit-le-nid/components/MenuWithAvatar.js"],"names":["React","PropTypes","Link","Menu","Avatar","propTypes","src","string","isRequired","alt","options","arrayOf","String","MenuWithAvatar","Component","constructor","event","setState","anchorEl","currentTarget","state","undefined","render","props","handleClick","margin","cursor","Boolean","handleClose","map","option","text","href","as","padding"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,GAAG,EAAEL,SAAS,CAACM,MAAV,CAAiBC,UADN;AAEhBC,EAAAA,GAAG,EAAER,SAAS,CAACM,MAAV,CAAiBC,UAFN;AAGhBE,EAAAA,OAAO,EAAET,SAAS,CAACU,OAAV,CAAkBC,MAAlB,EAA0BJ;AAHnB,CAAlB;;AAMA,MAAMK,cAAN,SAA6Bb,KAAK,CAACc,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,GAAG;AACZ;;AADY,yCAQCC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,KAAK,CAACG;AAAlB,OAAd;AACD,KAVa;;AAAA,yCAYA,MAAM;AAClB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAda;;AAGZ,SAAKE,KAAL,GAAa;AACXF,MAAAA,QAAQ,EAAEG;AADC,KAAb;AAGD;;AAUDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,OAAF;AAAWJ,MAAAA,GAAX;AAAgBG,MAAAA;AAAhB,QAAwB,KAAKc,KAAnC;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAe,KAAKE,KAA1B;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,uBAAeF,QAAQ,GAAG,aAAH,GAAmB,IAD5C;AAEE,uBAAc,MAFhB;AAGE,MAAA,OAAO,EAAE,KAAKM,WAHhB;AAIE,MAAA,UAAU,EAAE,KAAKA,WAJnB;AAKE,MAAA,GAAG,EAAElB,GALP;AAME,MAAA,GAAG,EAAEG,GANP;AAOE,MAAA,KAAK,EAAE;AAAEgB,QAAAA,MAAM,EAAE,mBAAV;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,MAAC,IAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,QAAQ,EAAER,QAFZ;AAGE,MAAA,IAAI,EAAES,OAAO,CAACT,QAAD,CAHf;AAIE,MAAA,OAAO,EAAE,KAAKU,WAJhB;AAKE,MAAA,WAAW,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQGlB,OAAO,CAACmB,GAAR,CAAaC,MAAD,IACX;AAAK,MAAA,EAAE,EAAC,cAAR;AAAuB,MAAA,GAAG,EAAEA,MAAM,CAACC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAED,MAAM,CAACE,IAAnB;AAAyB,MAAA,EAAE,EAAEF,MAAM,CAACG,EAAP,IAAaH,MAAM,CAACE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCJ,MAAM,CAACC,IAA3C,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADD,CARH,CAVF,CADF;AA8BD;;AAnD0C;;AAsD7ClB,cAAc,CAACR,SAAf,GAA2BA,SAA3B;AAEA,eAAeQ,cAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport Menu from '@material-ui/core/Menu';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(String).isRequired,\n};\n\nclass MenuWithAvatar extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      anchorEl: undefined,\n    };\n  }\n\n  handleClick = (event) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { options, src, alt } = this.props;\n    const { anchorEl } = this.state;\n\n    return (\n      <div>\n        <Avatar\n          aria-controls={anchorEl ? 'simple-menu' : null}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          onKeyPress={this.handleClick}\n          src={src}\n          alt={alt}\n          style={{ margin: '0px 20px 0px auto', cursor: 'pointer' }}\n        />\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n          keepMounted\n        >\n          <p />\n          {options.map((option) => (\n            <div id=\"wrappingLink\" key={option.text}>\n              <Link href={option.href} as={option.as || option.href}>\n                <a style={{ padding: '0px 20px' }}>{option.text}</a>\n              </Link>\n              <p />\n            </div>\n          ))}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nMenuWithAvatar.propTypes = propTypes;\n\nexport default MenuWithAvatar;\n"]},"metadata":{},"sourceType":"module"}