{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport Link from 'next/link';\nimport Menu from '@material-ui/core/Menu';\nimport Avatar from '@material-ui/core/Avatar';\n\nclass MenuWithAvatar extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"handleClick\", event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        anchorEl: null\n      });\n    });\n\n    this.state = {\n      anchorEl: undefined\n    };\n  }\n\n  render() {\n    const {\n      options,\n      src,\n      alt\n    } = this.props;\n    const {\n      anchorEl\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(Avatar, {\n      \"aria-controls\": anchorEl ? 'simple-menu' : null,\n      \"aria-haspopup\": \"true\",\n      onClick: this.handleClick,\n      onKeyPress: this.handleClick,\n      src: src,\n      alt: alt,\n      style: {\n        margin: '0px 20px 0px auto',\n        cursor: 'pointer'\n      }\n    }), __jsx(Menu, {\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: this.handleClose,\n      keepMounted: true\n    }, __jsx(\"p\", null), options.map(option => __jsx(\"div\", {\n      id: \"wrappingLink\",\n      key: option.text\n    }, __jsx(Link, {\n      href: option.href,\n      as: option.as || option.href\n    }, __jsx(\"a\", {\n      onClick: option.onClick,\n      style: {\n        padding: '0px 20px'\n      }\n    }, option.text)), __jsx(\"p\", null)))));\n  }\n\n}\n\nexport default MenuWithAvatar;","map":null,"metadata":{},"sourceType":"module"}