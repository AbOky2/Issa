{"ast":null,"code":"var _jsxFileName = \"/usr/src/kit-le-nid/components/form/Btn.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport clsx from 'clsx';\nimport Icon, { iconTypes, colorTypes } from './Icon';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: 'fit-content',\n    padding: '18px 23px',\n    background: 'linear-gradient(180deg, #3563DC 0%, #3E6FEF 4.34%, #3062E3 94.05%, #154AD2 100%)',\n    boxShadow: '0px 4px 14px rgba(14, 108, 218, 0.35), inset 0px 0px 6px rgba(24, 72, 196, 0.6)',\n    color: 'white',\n    borderRadius: '10px',\n    cursor: 'pointer',\n    fontSize: '1.8rem',\n    fontWeight: '600',\n    '& a': {\n      fontStyle: 'normal',\n      lineHeight: '28px',\n      color: 'white'\n    },\n    '& svg': {\n      marginRight: 20\n    }\n  },\n  whiteColor: {\n    '& a': {\n      color: theme.palette.blue\n    },\n    color: theme.palette.blue,\n    background: 'white',\n    boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.08)'\n  }\n}));\n\nconst Btn = ({\n  onClick,\n  href,\n  text,\n  iconType,\n  iconColor,\n  alignRight,\n  whiteColor\n}) => {\n  const classes = useStyles();\n  const className = !whiteColor ? classes.container : clsx(classes.container, classes.whiteColor);\n  return __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: className,\n    style: alignRight ? {\n      marginLeft: 'auto'\n    } : {},\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, iconType ? __jsx(Icon, {\n    type: iconType,\n    color: iconColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }) : '', href ? __jsx(Link, {\n    href: href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, text)) : __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, text));\n};\n\nBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  href: PropTypes.string,\n  iconColor: PropTypes.oneOf(colorTypes),\n  iconType: PropTypes.oneOf(iconTypes),\n  alignRight: PropTypes.bool,\n  whiteColor: PropTypes.bool\n};\nBtn.defaultProps = {\n  href: '',\n  iconColor: undefined,\n  iconType: undefined,\n  alignRight: false,\n  whiteColor: false\n};\nexport default Btn;","map":{"version":3,"sources":["/usr/src/kit-le-nid/components/form/Btn.js"],"names":["React","PropTypes","Link","makeStyles","Grid","clsx","Icon","iconTypes","colorTypes","useStyles","theme","container","width","padding","background","boxShadow","color","borderRadius","cursor","fontSize","fontWeight","fontStyle","lineHeight","marginRight","whiteColor","palette","blue","Btn","onClick","href","text","iconType","iconColor","alignRight","classes","className","marginLeft","propTypes","func","isRequired","string","oneOf","bool","defaultProps","undefined"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA4C,QAA5C;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,aADE;AAETC,IAAAA,OAAO,EAAE,WAFA;AAGTC,IAAAA,UAAU,EAAE,kFAHH;AAITC,IAAAA,SAAS,EAAE,iFAJF;AAKTC,IAAAA,KAAK,EAAE,OALE;AAMTC,IAAAA,YAAY,EAAE,MANL;AAOTC,IAAAA,MAAM,EAAE,SAPC;AAQTC,IAAAA,QAAQ,EAAE,QARD;AASTC,IAAAA,UAAU,EAAE,KATH;AAUT,WAAO;AACLC,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,UAAU,EAAE,MAFP;AAGLN,MAAAA,KAAK,EAAE;AAHF,KAVE;AAeT,aAAS;AACPO,MAAAA,WAAW,EAAE;AADN;AAfA,GAD4B;AAoBvCC,EAAAA,UAAU,EAAE;AACV,WAAO;AACLR,MAAAA,KAAK,EAAEN,KAAK,CAACe,OAAN,CAAcC;AADhB,KADG;AAIVV,IAAAA,KAAK,EAAEN,KAAK,CAACe,OAAN,CAAcC,IAJX;AAKVZ,IAAAA,UAAU,EAAE,OALF;AAMVC,IAAAA,SAAS,EAAE;AAND;AApB2B,CAAZ,CAAD,CAA5B;;AA8BA,MAAMY,GAAG,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA,SAAjC;AAA4CC,EAAAA,UAA5C;AAAwDT,EAAAA;AAAxD,CAAD,KAA0E;AACpF,QAAMU,OAAO,GAAGzB,SAAS,EAAzB;AACA,QAAM0B,SAAS,GAAG,CAACX,UAAD,GAAcU,OAAO,CAACvB,SAAtB,GAAkCN,IAAI,CAAC6B,OAAO,CAACvB,SAAT,EAAoBuB,OAAO,CAACV,UAA5B,CAAxD;AAEA,SACE,MAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,SAAS,EAAEW,SAJb;AAKE,IAAA,KAAK,EAAEF,UAAU,GAAG;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAAH,GAA4B,EAL/C;AAME,IAAA,OAAO,EAAER,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGG,QAAQ,GAAG,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,QAAZ;AAAsB,IAAA,KAAK,EAAEC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgD,EAR3D,EASGH,IAAI,GACH,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CADF,CADG,GAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAP,CAdJ,CADF;AAmBD,CAvBD;;AAyBAH,GAAG,CAACU,SAAJ,GAAgB;AACdT,EAAAA,OAAO,EAAE3B,SAAS,CAACqC,IAAV,CAAeC,UADV;AAEdT,EAAAA,IAAI,EAAE7B,SAAS,CAACuC,MAAV,CAAiBD,UAFT;AAGdV,EAAAA,IAAI,EAAE5B,SAAS,CAACuC,MAHF;AAIdR,EAAAA,SAAS,EAAE/B,SAAS,CAACwC,KAAV,CAAgBjC,UAAhB,CAJG;AAKduB,EAAAA,QAAQ,EAAE9B,SAAS,CAACwC,KAAV,CAAgBlC,SAAhB,CALI;AAMd0B,EAAAA,UAAU,EAAEhC,SAAS,CAACyC,IANR;AAOdlB,EAAAA,UAAU,EAAEvB,SAAS,CAACyC;AAPR,CAAhB;AASAf,GAAG,CAACgB,YAAJ,GAAmB;AACjBd,EAAAA,IAAI,EAAE,EADW;AAEjBG,EAAAA,SAAS,EAAEY,SAFM;AAGjBb,EAAAA,QAAQ,EAAEa,SAHO;AAIjBX,EAAAA,UAAU,EAAE,KAJK;AAKjBT,EAAAA,UAAU,EAAE;AALK,CAAnB;AAQA,eAAeG,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport clsx from 'clsx';\nimport Icon, { iconTypes, colorTypes } from './Icon';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: 'fit-content',\n    padding: '18px 23px',\n    background: 'linear-gradient(180deg, #3563DC 0%, #3E6FEF 4.34%, #3062E3 94.05%, #154AD2 100%)',\n    boxShadow: '0px 4px 14px rgba(14, 108, 218, 0.35), inset 0px 0px 6px rgba(24, 72, 196, 0.6)',\n    color: 'white',\n    borderRadius: '10px',\n    cursor: 'pointer',\n    fontSize: '1.8rem',\n    fontWeight: '600',\n    '& a': {\n      fontStyle: 'normal',\n      lineHeight: '28px',\n      color: 'white',\n    },\n    '& svg': {\n      marginRight: 20,\n    },\n  },\n  whiteColor: {\n    '& a': {\n      color: theme.palette.blue,\n    },\n    color: theme.palette.blue,\n    background: 'white',\n    boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.08)',\n  },\n}));\n\nconst Btn = ({ onClick, href, text, iconType, iconColor, alignRight, whiteColor }) => {\n  const classes = useStyles();\n  const className = !whiteColor ? classes.container : clsx(classes.container, classes.whiteColor);\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      className={className}\n      style={alignRight ? { marginLeft: 'auto' } : {}}\n      onClick={onClick}\n    >\n      {iconType ? <Icon type={iconType} color={iconColor} /> : ''}\n      {href ? (\n        <Link href={href}>\n          <a>{text}</a>\n        </Link>\n      ) : (\n        <span>{text}</span>\n      )}\n    </Grid>\n  );\n};\n\nBtn.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  href: PropTypes.string,\n  iconColor: PropTypes.oneOf(colorTypes),\n  iconType: PropTypes.oneOf(iconTypes),\n  alignRight: PropTypes.bool,\n  whiteColor: PropTypes.bool,\n};\nBtn.defaultProps = {\n  href: '',\n  iconColor: undefined,\n  iconType: undefined,\n  alignRight: false,\n  whiteColor: false,\n};\n\nexport default Btn;\n"]},"metadata":{},"sourceType":"module"}