{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport sendRequest from './sendRequest';\nconst BASE_PATH = '/api/v1/customer';\nexport const getPartnersApiMethod = (options = {}) => sendRequest(`${BASE_PATH}/partners`, _objectSpread({\n  method: 'GET'\n}, options));\nexport const getCurrentUserkApiMethod = (options = {}) => sendRequest(`${BASE_PATH}/currentUser`, _objectSpread({\n  method: 'GET'\n}, options));\nexport const getPropertiesApiMethod = (options = {}) => sendRequest(`${BASE_PATH}/properties`, _objectSpread({\n  method: 'GET'\n}, options));\nexport const getUserSearchApiMethod = args => sendRequest(`${BASE_PATH}/search`, {\n  body: JSON.stringify(args)\n});\nexport const addBookmarkApiMethod = args => sendRequest(`${BASE_PATH}/bookmark`, {\n  body: JSON.stringify(args)\n});\nexport const getPartnerApiMethod = (id, options = {}) => sendRequest(`${BASE_PATH}/partner/${id}`, _objectSpread({\n  method: 'GET'\n}, options));\nexport const getPropertyApiMethod = (id, options = {}) => sendRequest(`${BASE_PATH}/property/${id}`, _objectSpread({\n  method: 'GET'\n}, options));\nexport const fetchCheckoutSessionApiMethod = ({\n  bookId,\n  redirectUrl\n}) => sendRequest(`${BASE_PATH}/stripe/fetch-checkout-session`, {\n  body: JSON.stringify({\n    bookId,\n    redirectUrl\n  })\n});\nexport const getMyBookListApiMethod = (options = {}) => sendRequest(`${BASE_PATH}/my-books`, _objectSpread({\n  method: 'GET'\n}, options));","map":{"version":3,"sources":["/usr/src/kit-le-nid/lib/api/customer.js"],"names":["sendRequest","BASE_PATH","getPartnersApiMethod","options","method","getCurrentUserkApiMethod","getPropertiesApiMethod","getUserSearchApiMethod","args","body","JSON","stringify","addBookmarkApiMethod","getPartnerApiMethod","id","getPropertyApiMethod","fetchCheckoutSessionApiMethod","bookId","redirectUrl","getMyBookListApiMethod"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,MAAMC,SAAS,GAAG,kBAAlB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,OAAO,GAAG,EAAX,KAClCH,WAAW,CAAE,GAAEC,SAAU,WAAd;AACTG,EAAAA,MAAM,EAAE;AADC,GAEND,OAFM,EADN;AAKP,OAAO,MAAME,wBAAwB,GAAG,CAACF,OAAO,GAAG,EAAX,KACtCH,WAAW,CAAE,GAAEC,SAAU,cAAd;AACTG,EAAAA,MAAM,EAAE;AADC,GAEND,OAFM,EADN;AAMP,OAAO,MAAMG,sBAAsB,GAAG,CAACH,OAAO,GAAG,EAAX,KACpCH,WAAW,CAAE,GAAEC,SAAU,aAAd;AACTG,EAAAA,MAAM,EAAE;AADC,GAEND,OAFM,EADN;AAMP,OAAO,MAAMI,sBAAsB,GAAIC,IAAD,IACpCR,WAAW,CAAE,GAAEC,SAAU,SAAd,EAAwB;AACjCQ,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAD2B,CAAxB,CADN;AAKP,OAAO,MAAMI,oBAAoB,GAAIJ,IAAD,IAClCR,WAAW,CAAE,GAAEC,SAAU,WAAd,EAA0B;AACnCQ,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAD6B,CAA1B,CADN;AAIP,OAAO,MAAMK,mBAAmB,GAAG,CAACC,EAAD,EAAKX,OAAO,GAAG,EAAf,KACjCH,WAAW,CAAE,GAAEC,SAAU,YAAWa,EAAG,EAA5B;AACTV,EAAAA,MAAM,EAAE;AADC,GAEND,OAFM,EADN;AAKP,OAAO,MAAMY,oBAAoB,GAAG,CAACD,EAAD,EAAKX,OAAO,GAAG,EAAf,KAClCH,WAAW,CAAE,GAAEC,SAAU,aAAYa,EAAG,EAA7B;AACTV,EAAAA,MAAM,EAAE;AADC,GAEND,OAFM,EADN;AAMP,OAAO,MAAMa,6BAA6B,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAC3ClB,WAAW,CAAE,GAAEC,SAAU,gCAAd,EAA+C;AACxDQ,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEM,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAf;AADkD,CAA/C,CADN;AAKP,OAAO,MAAMC,sBAAsB,GAAG,CAAChB,OAAO,GAAG,EAAX,KACpCH,WAAW,CAAE,GAAEC,SAAU,WAAd;AACTG,EAAAA,MAAM,EAAE;AADC,GAEND,OAFM,EADN","sourcesContent":["import sendRequest from './sendRequest';\n\nconst BASE_PATH = '/api/v1/customer';\n\nexport const getPartnersApiMethod = (options = {}) =>\n  sendRequest(`${BASE_PATH}/partners`, {\n    method: 'GET',\n    ...options,\n  });\nexport const getCurrentUserkApiMethod = (options = {}) =>\n  sendRequest(`${BASE_PATH}/currentUser`, {\n    method: 'GET',\n    ...options,\n  });\n\nexport const getPropertiesApiMethod = (options = {}) =>\n  sendRequest(`${BASE_PATH}/properties`, {\n    method: 'GET',\n    ...options,\n  });\n\nexport const getUserSearchApiMethod = (args) =>\n  sendRequest(`${BASE_PATH}/search`, {\n    body: JSON.stringify(args),\n  });\n\nexport const addBookmarkApiMethod = (args) =>\n  sendRequest(`${BASE_PATH}/bookmark`, {\n    body: JSON.stringify(args),\n  });\nexport const getPartnerApiMethod = (id, options = {}) =>\n  sendRequest(`${BASE_PATH}/partner/${id}`, {\n    method: 'GET',\n    ...options,\n  });\nexport const getPropertyApiMethod = (id, options = {}) =>\n  sendRequest(`${BASE_PATH}/property/${id}`, {\n    method: 'GET',\n    ...options,\n  });\n\nexport const fetchCheckoutSessionApiMethod = ({ bookId, redirectUrl }) =>\n  sendRequest(`${BASE_PATH}/stripe/fetch-checkout-session`, {\n    body: JSON.stringify({ bookId, redirectUrl }),\n  });\n\nexport const getMyBookListApiMethod = (options = {}) =>\n  sendRequest(`${BASE_PATH}/my-books`, {\n    method: 'GET',\n    ...options,\n  });\n"]},"metadata":{},"sourceType":"module"}