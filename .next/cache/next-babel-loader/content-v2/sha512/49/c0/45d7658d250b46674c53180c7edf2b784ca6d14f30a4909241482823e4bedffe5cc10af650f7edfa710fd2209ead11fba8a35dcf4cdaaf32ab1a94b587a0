{"ast":null,"code":"import _defineProperty from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { Icon } from './form';\nvar AutoPlaySwipeableViews = autoPlay(SwipeableViews);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& > div': {\n        borderRadius: '2.5rem'\n      },\n      '& > div:last-of-type': {\n        transform: 'translateY(-50%)',\n        position: 'absolute',\n        width: '100%',\n        top: '50%',\n        backgroundColor: 'transparent'\n      },\n      '& > div:last-of-type > button:first-of-type': {\n        transform: 'rotate(180deg)'\n      }\n    },\n    header: {\n      display: 'flex',\n      alignItems: 'center',\n      backgroundSize: 'contain',\n      backgroundRepeat: 'no-repeat',\n      height: 50,\n      paddingLeft: theme.spacing(4) // backgroundColor: theme.palette.background.default,\n\n    },\n    img: {\n      height: 450,\n      display: 'block',\n      overflow: 'hidden',\n      width: '100%'\n    }\n  };\n});\n\nfunction SwipeableTextMobileStepper(_ref) {\n  var _ref$list = _ref.list,\n      list = _ref$list === void 0 ? [] : _ref$list;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var maxSteps = list.length;\n\n  var handleNext = function handleNext() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleStepChange = function handleStepChange(step) {\n    setActiveStep(step);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AutoPlaySwipeableViews, {\n    axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n    index: activeStep,\n    onChangeIndex: handleStepChange,\n    enableMouseEvents: true\n  }, list.map(function (path, index) {\n    var _ref2;\n\n    return __jsx(\"div\", {\n      key: path\n    }, Math.abs(activeStep - index) <= 2 ? __jsx(\"div\", {\n      className: classes.img,\n      style: (_ref2 = {\n        backgroundImage: \"url(\".concat(path, \")\"),\n        backgroundSize: 'contain'\n      }, _defineProperty(_ref2, \"backgroundSize\", 'cover'), _defineProperty(_ref2, \"backgroundPosition\", 'center'), _defineProperty(_ref2, \"backgroundRepeat\", 'no-repeat'), _defineProperty(_ref2, \"backgroundColor\", 'black'), _ref2),\n      alt: \"\"\n    }) : null);\n  })), __jsx(MobileStepper, {\n    steps: maxSteps,\n    position: \"static\",\n    variant: \"text\",\n    activeStep: activeStep,\n    nextButton: __jsx(Button, {\n      size: \"small\",\n      onClick: handleNext,\n      disabled: activeStep === maxSteps - 1\n    }, theme.direction === 'rtl' ? __jsx(Icon, {\n      type: \"carrouselArrow\",\n      color: \"white\"\n    }) : __jsx(Icon, {\n      type: \"carrouselArrow\",\n      color: \"white\"\n    })),\n    backButton: __jsx(Button, {\n      size: \"small\",\n      onClick: handleBack,\n      disabled: activeStep === 0\n    }, theme.direction === 'rtl' ? __jsx(Icon, {\n      type: \"carrouselArrow\",\n      color: \"white\"\n    }) : __jsx(Icon, {\n      type: \"carrouselArrow\",\n      color: \"white\"\n    }))\n  }));\n}\n\nexport default SwipeableTextMobileStepper;","map":null,"metadata":{},"sourceType":"module"}