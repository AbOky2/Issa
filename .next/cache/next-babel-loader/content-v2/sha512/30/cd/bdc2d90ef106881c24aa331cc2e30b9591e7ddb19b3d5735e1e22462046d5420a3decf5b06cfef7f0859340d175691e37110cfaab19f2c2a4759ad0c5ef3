{"ast":null,"code":"var _regeneratorRuntime = require(\"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _defineProperty = require(\"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _strategyTypeKeys;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Admin = 'admin';\nvar Roomer = 'roomer';\nvar Buyer = 'buyer';\nvar Student = 'student';\nvar studentRoleList = [Student, Buyer];\nvar RoleList = [Admin].concat(studentRoleList); // status\n\nvar Active = 'active';\nvar Inactive = 'inactive';\nvar StatusList = [Active, Inactive]; // Methods\n\nvar isAdmin = function isAdmin(user) {\n  return user && user.role === Admin;\n};\n\nvar isStudent = function isStudent(user) {\n  return user && studentRoleList.includes(user.role);\n};\n\nvar isBuyer = function isBuyer(user) {\n  return user && user.role === Buyer;\n};\n\nvar isRoomer = function isRoomer(user) {\n  return user && user.role === Roomer;\n}; // Other\n\n\nvar buyStrategy = 'buy';\nvar locationStrategy = 'location';\nvar guarantorStrategy = 'guarantor';\nvar strategyTypeKeys = (_strategyTypeKeys = {}, _defineProperty(_strategyTypeKeys, buyStrategy, 'Achat'), _defineProperty(_strategyTypeKeys, locationStrategy, 'Location'), _defineProperty(_strategyTypeKeys, guarantorStrategy, 'garant'), _strategyTypeKeys); // Slug\n\nvar slugify = function slugify(slug) {\n  var str = slug;\n  str = str.replace(/^\\s+|\\s+$/g, '');\n  str = str.toLowerCase();\n  var from = 'àáäâèéëêìíïîòóöôùúüûñç·/_,:;';\n  var to = 'aaaaeeeeiiiioooouuuunc------';\n\n  for (var i = 0, l = from.length; i < l; i += 1) {\n    str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n  }\n\n  str = str.replace(/[^a-z0-9 -]/g, '').replace(/\\s+/g, '-').replace(/-+/g, '-');\n  return str;\n};\n\nvar createUniqueSlug = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(Model, slug, count) {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Model.findOne({\n              slug: \"\".concat(slug, \"-\").concat(count)\n            }, 'id');\n\n          case 2:\n            user = _context.sent;\n\n            if (user) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", \"\".concat(slug, \"-\").concat(count));\n\n          case 5:\n            return _context.abrupt(\"return\", createUniqueSlug(Model, slug, count + 1));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createUniqueSlug(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar generateSlug = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Model, name) {\n    var filter,\n        origSlug,\n        user,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            filter = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n            origSlug = slugify(name);\n            _context2.next = 4;\n            return Model.findOne(_objectSpread({\n              slug: origSlug\n            }, filter), 'id');\n\n          case 4:\n            user = _context2.sent;\n\n            if (user) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", origSlug);\n\n          case 7:\n            return _context2.abrupt(\"return\", createUniqueSlug(Model, origSlug, 1));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function generateSlug(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar isValidateEmail = function isValidateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nvar ucFirst = function ucFirst(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nmodule.exports = {\n  // Vars\n  Admin: Admin,\n  Student: Student,\n  Buyer: Buyer,\n  Roomer: Roomer,\n  Active: Active,\n  Inactive: Inactive,\n  RoleList: RoleList,\n  StatusList: StatusList,\n  studentRoleList: studentRoleList,\n  strategyTypeKeys: strategyTypeKeys,\n  buyStrategy: buyStrategy,\n  locationStrategy: locationStrategy,\n  guarantorStrategy: guarantorStrategy,\n  // Methods\n  ucFirst: ucFirst,\n  isValidateEmail: isValidateEmail,\n  isAdmin: isAdmin,\n  isStudent: isStudent,\n  isBuyer: isBuyer,\n  generateSlug: generateSlug,\n  isRoomer: isRoomer\n};","map":null,"metadata":{},"sourceType":"script"}