{"ast":null,"code":"import _extends from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/usr/src/kit-le-nid/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nvar labelDimension = {\n  xs: 6,\n  ms: 12\n};\nvar className;\nvar defaultDimension = {\n  xs: 12,\n  ms: 12\n};\n\nvar IconDisplay = function IconDisplay(_ref) {\n  var src = _ref.src,\n      fullIcon = _ref.fullIcon,\n      withGrayScaleIcon = _ref.withGrayScaleIcon;\n  return __jsx(\"div\", {\n    className: \"jsx-568689068\" + \" \" + \"\".concat(fullIcon ? 'fullIcon' : '', \" \").concat(withGrayScaleIcon ? 'withGrayScaleIcon' : '')\n  }, __jsx(\"img\", {\n    src: src,\n    alt: \"\",\n    className: \"jsx-568689068\" + \" \" + \"elem-icon\"\n  }), __jsx(_JSXStyle, {\n    id: \"568689068\"\n  }, [\".fullIcon.jsx-568689068{width:100%;padding:5px;}\", \".fullIcon.jsx-568689068 img.jsx-568689068{display:block;width:100%;}\", \".withGrayScaleIcon.jsx-568689068 img.jsx-568689068{-webkit-filter:grayscale(1);filter:grayscale(1);}\"]));\n};\n\nvar LableWrapper = function LableWrapper(_ref2) {\n  var value = _ref2.value,\n      label = _ref2.label,\n      _ref2$labelPosition = _ref2.labelPosition,\n      labelPosition = _ref2$labelPosition === void 0 ? '' : _ref2$labelPosition,\n      icon = _ref2.icon,\n      fullIcon = _ref2.fullIcon,\n      withGrayScaleIcon = _ref2.withGrayScaleIcon,\n      props = _objectWithoutProperties(_ref2, [\"value\", \"label\", \"labelPosition\", \"icon\", \"fullIcon\", \"withGrayScaleIcon\"]);\n\n  if (labelPosition.includes && labelPosition.includes('top')) labelDimension.xs = 12;\n  if (labelPosition.includes && labelPosition.includes('left')) className = 'text-left'; // for all mobile\n  // labelDimension.xs = 12\n\n  return __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    alignContent: \"center\"\n  }, __jsx(Grid, _extends({\n    item: true\n  }, labelDimension, {\n    className: \"label-container \".concat(className)\n  }), icon && __jsx(IconDisplay, {\n    src: icon,\n    fullIcon: fullIcon,\n    withGrayScaleIcon: withGrayScaleIcon && !value\n  }), __jsx(\"span\", {\n    className: \"form-label-container\",\n    style: _objectSpread({}, props.labelStyle)\n  }, label)), __jsx(Grid, _extends({\n    item: true\n  }, labelDimension), props.children));\n};\n\nvar FormElementWrapper = function FormElementWrapper(_ref3) {\n  var value = _ref3.value,\n      _ref3$showLabel = _ref3.showLabel,\n      showLabel = _ref3$showLabel === void 0 ? false : _ref3$showLabel,\n      icon = _ref3.icon,\n      fullIcon = _ref3.fullIcon,\n      withGrayScaleIcon = _ref3.withGrayScaleIcon,\n      props = _objectWithoutProperties(_ref3, [\"value\", \"showLabel\", \"icon\", \"fullIcon\", \"withGrayScaleIcon\"]);\n\n  if (showLabel) return __jsx(LableWrapper, _extends({}, props, {\n    icon: icon\n  }));\n  return __jsx(Grid, _extends({\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    justify: \"space-between\"\n  }, defaultDimension), icon && __jsx(Grid, {\n    item: true,\n    xs: 1\n  }, icon && __jsx(IconDisplay, {\n    src: icon,\n    fullIcon: fullIcon,\n    withGrayScaleIcon: withGrayScaleIcon && !value\n  })), __jsx(Grid, {\n    item: true,\n    xs: icon ? 11 : 12,\n    className: icon ? 'input-icon-wrapper' : ''\n  }, props.children));\n};\n\nexport { FormElementWrapper };","map":null,"metadata":{},"sourceType":"module"}